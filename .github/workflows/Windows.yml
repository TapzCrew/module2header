name: Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: ${{ matrix.os.name }} ( ${{matrix.os.compiler }} ${{ matrix.kind }}, ${{ matrix.mode }} )
    runs-on: ${{ matrix.os.value }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - {
           name: "Windows",
           compiler: "MSVC",
           value: windows-latest,
           triplet: "x64-windows"
        }
        - {
           name: "Windows",
           compiler: "MinGW",
           value: windows-latest,
           triplet: "x64-windows"
        }
            
        kind: [static, shared]
        mode: [release, debug, asan]
    steps:
        - name: Install msvc
          uses: ilammy/msvc-dev-cmd@v1

        - name: Install xmake
          uses: xmake-io/github-action-setup-xmake@v1

        - name: Checkout
          uses: actions/checkout@v2
          with:
            fetch-depth: 0

        - name: Configure & Build
          id: confandbuild
          run: |
            $VS_RUNTIME = "MD"
            if("${{ matrix.kind }}" -eq "static") {
                $VS_RUNTIME = "MT"
            }

            if("${{ matrix.os.compiler }}" -eq "MinGW") {
              xrepo install --yes llvm-mingw
              $MINGW_INSTALL_DIR = xrepo info llvm-mingw | Out-String
              $MINGW_INSTALL_DIR -match 'installdir.+'
              $Matches[0] -match '(C.+)'
              $MINGW_INSTALL_DIR = $Matches[0]
              $MINGW_INSTALL_DIR = $MINGW_INSTALL_DIR -replace '\x1b\[[0-9;]*m','' -replace "`n","" -replace "`r",""
              xmake g --mingw="$MINGW_INSTALL_DIR"

              xmake f --unity_build=y -v --yes -m ${{ matrix.mode }} -k ${{ matrix.kind }} -p mingw
            } else {
              xmake f --unity_build=y -v --yes -m ${{ matrix.mode }} -k ${{ matrix.kind }} --vs_runtime=$VS_RUNTIME 
            }
            xmake b -v

        - name: Install
          id: install
          run: |
            xmake install -v --installdir="${{ runner.workspace }}/Module2Header_Output"

            
        - name: Upload artifacts
          id: upload
          uses: actions/upload-artifact@v1
          with:
            name: ${{ matrix.os.name }}-${{ matrix.os.compiler }}-${{ matrix.kind }}-${{ matrix.mode }}
            path: ${{ runner.workspace }}/Module2Header_Output
 